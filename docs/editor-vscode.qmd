---
title: "VS Code and Positron"
editor:
  markdown:
    wrap: sentence
    canonical: true
---

Air provides first class support for both VS Code and Positron, which both support the [Language Server Protocol](https://microsoft.github.io/language-server-protocol/).

# Installation

Air is available [as an Extension](https://marketplace.visualstudio.com/items?itemName=Posit.air-vscode) for both VS Code and Positron.
The extension comes pre-bundled with an Air binary, so you don't need anything else to get going!
The Air extension is hosted in the VS Code Marketplace and on OpenVSX.

# Features

## Format on save

Once you have the extension installed, turn on Format on Save for R documents by opening your `settings.json` and adding:

``` json
{
    "[r]": {
        "editor.formatOnSave": true
    }
}
```

You should now be able to simply open an R document, save it, and have the entire document formatted by Air.
You can also explicitly call the command `Format Document` if you'd like to control this manually.

<!--# Come back and add video -->

## Format selection

To format a selection of code, highlight it with your cursor and run the command `Format Selection`.
Formatting a selection may *expand* that selection to find the nearest complete fragment of code that is formattable.

<!--# Come back and add video -->

## Format workspace folder

Air ships with a special `Air: Format Workspace Folder` command to format all R files within a workspace folder.
This is particularly useful when transitioning an existing project over to Air, where you need to perform a project-wide format before utilizing the per-file format on save feature.

Note that if you don't have an `air.toml` in your project, then this command will use Air's default settings rather than the IDE [settings synchronization mechanism](configuration.qmd#configuration-settings-synchronization).
We recommend using `usethis::use_air()` to set up an `air.toml` (among other things) before running this command.

## Quarto

Quarto can automatically invoke Air on R code cells when the [Quarto extension](https://marketplace.visualstudio.com/items?itemName=quarto.quarto) is active.

### Format on save

To format all R code cells on save, set this in your `settings.json`:

``` json
{
    "[quarto]": {
        "editor.formatOnSave": true
    },
    "[r]": {
        "editor.formatOnSave": true
    }
}
```

<!--# Come back and add video -->

### Format cell

When inside an R cell in a Quarto document, use the chorded key combination `Cmd+K Cmd+F` or the command `Quarto: Format Cell` to format a single cell.

<!--# Come back and add video -->

## Configuration autocompletion and validation

Installing the [Even Better TOML](https://marketplace.visualstudio.com/items?itemName=tamasfe.even-better-toml) extension activates autocompletion and validation while inside an `air.toml` file.
There is a [known issue](https://github.com/tamasfe/taplo/issues/514) regarding autocompletion duplication, but we still find this extension very useful!

![](images/autocomplete-persistent-line-breaks.png){fig-align="center"}

![](images/autocomplete-line-ending.png){fig-align="center"}
