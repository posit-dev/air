---
title: "Neovim"
editor:
  markdown:
    wrap: sentence
    canonical: true
---

# Installing the Air server

First, install Air by following the instructions on the [Air CLI documentation](https://posit-dev.github.io/air/cli.html). The CLI binary bundles the Air server as well as a command line formatting tool.

# Configuration

Air can be configured as a Language Server Protocol (LSP) client via [nvim-lspconfig](https://github.com/neovim/nvim-lspconfig) or as a formatter plugin via [conform.nvim](https://github.com/stevearc/conform.nvim).

## LSP Configuration with nvim-lspconfig

To configure Air's language server, add the following to your config:

```lua
require("lspconfig").air.setup({})
```

To format files with Air on save, add the following to your configuration:

```lua
vim.api.nvim_create_autocmd("BufWritePre", {
    pattern = { "*.R", "*.r" },
    callback = function()
        vim.lsp.buf.format({
            filter = function(client)
                return client.name == "air"
            end,
        })
    end,
})
```

## conform.nvim configuration

Air can be configured as a formatter plugin via [conform.nvim](https://github.com/stevearc/conform.nvim). This allows you to format R code with Air inside code chunks in Quarto and RMarkdown documents. It can be configured by adding the following to your `nvim/lua/plugins/conform.lua`:

```lua
require("conform").setup({
    formatters_by_ft = {
        r = { "air" },
    },
})
```

See the [conform.nvim documentation](https://github.com/stevearc/conform.nvim?tab=readme-ov-file#installation) for more information on how to configure conform.nvim with your favorite plugin manager.
