[
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "Installing Air",
    "section": "",
    "text": "If you’d like to use Air at the command line, you can use one of our standalone installers.\n\nTo install Air as a command line tool:\nOn macOS and Linux:\ncurl -LsSf https://github.com/posit-dev/air/releases/latest/download/air-installer.sh | sh\nOn Windows:\npowershell -c \"irm https://github.com/posit-dev/air/releases/latest/download/air-installer.ps1 | iex\"\nFor a specific version:\ncurl -LsSf https://github.com/posit-dev/air/releases/download/0.1.1/air-installer.sh | sh\npowershell -c \"irm https://github.com/posit-dev/air/releases/download/0.1.1/air-installer.ps1 | iex\"\nThe installer scripts will automatically add Air to your PATH. The very first time you install Air, for the PATH modifications to be applied you’ll need to restart your terminal.\nOn Windows, the first time you install Air it requires a full system restart for the PATH modification to take effect. We are working on improving this.",
    "crumbs": [
      "Installation"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "Air is an R formatter and language server, written in Rust.\n\nIntegrates with your favorite editor with support for\n\nFormat on save\nFormat selection\n\nUsable from the command line with support for\n\nFormatting individual files\nRecursively formatting entire directories\n--check mode, suitable for a git pre-commit hook or a GitHub Actions workflow\n\n\nIf you’d like to use Air from the command line, read our installation guide. If you’d like to use Air inside a code editor, read our editors guide.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "editors.html",
    "href": "editors.html",
    "title": "Editor setup",
    "section": "",
    "text": "Air provides excellent support for code editors that support the Language Server Protocol. Many do, including Positron, VS Code, and Zed. Air also provides some support for code editors that allow for external formatters, such as RStudio.",
    "crumbs": [
      "Editors"
    ]
  },
  {
    "objectID": "editors.html#format-on-save",
    "href": "editors.html#format-on-save",
    "title": "Editor setup",
    "section": "Format on save",
    "text": "Format on save\nOnce you have the extension installed, turn on Format on Save for R documents by opening your settings.json and adding:\n{\n    \"[r]\": {\n        \"editor.formatOnSave\": true\n    }\n}\nYou may also want to set Air as the default formatter for R documents if you have multiple R formatters installed. You can set that with \"editor.defaultFormatter\": \"Posit.air\".\nYou should now be able to simply open an R document, save it, and have the entire document formatted by Air. You can also explicitly call the command Format Document if you’d like to control this manually.",
    "crumbs": [
      "Editors"
    ]
  },
  {
    "objectID": "editors.html#format-selection",
    "href": "editors.html#format-selection",
    "title": "Editor setup",
    "section": "Format selection",
    "text": "Format selection\nTo format a selection of code, highlight it with your cursor and run the command Format Selection. Formatting a selection may expand that selection to find the nearest complete fragment of code that is formattable.",
    "crumbs": [
      "Editors"
    ]
  },
  {
    "objectID": "editors.html#format-on-save-1",
    "href": "editors.html#format-on-save-1",
    "title": "Editor setup",
    "section": "Format on save",
    "text": "Format on save\nAfter you’ve set Air as an external formatter, you can either tell RStudio to format all documents on save, or set this on a per document basis.\nTo format all documents on save, open Tools -&gt; Global Options -&gt; Code -&gt; Saving and check Reformat documents on save.\n\n\n\n\n\nTo format individual documents on save, open the file specific settings and check Reformat Document on Save.",
    "crumbs": [
      "Editors"
    ]
  },
  {
    "objectID": "editors.html#format-on-save-2",
    "href": "editors.html#format-on-save-2",
    "title": "Editor setup",
    "section": "Format on save",
    "text": "Format on save\nTo format all R code cells on save, set this in your settings.json:\n{\n    \"[quarto]\": {\n        \"editor.formatOnSave\": true\n    },\n    \"[r]\": {\n        \"editor.formatOnSave\": true\n    }\n}",
    "crumbs": [
      "Editors"
    ]
  },
  {
    "objectID": "editors.html#format-cell",
    "href": "editors.html#format-cell",
    "title": "Editor setup",
    "section": "Format cell",
    "text": "Format cell\nWhen inside an R cell in a Quarto document, use the chorded key combination Cmd+K Cmd+F or the command Quarto: Format Cell to format a single cell.",
    "crumbs": [
      "Editors"
    ]
  },
  {
    "objectID": "formatter.html",
    "href": "formatter.html",
    "title": "Formatter",
    "section": "",
    "text": "TODO",
    "crumbs": [
      "Formatter"
    ]
  }
]