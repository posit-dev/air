---
source: crates/air_formatter_test/src/snapshot_builder.rs
info: r/braced_expressions.R
---
# Input

```R
# Hard line break between `{}` tokens
function() {}
for (i in x) {}
if (a) {}

{}

{
  1
}

{
  # comment
}

# ------------------------------------------------------------------------
# Curly-curly

{{1}}
{{ foo }}

{{ var_that_is_extremely_long_and_eventually_forces_a_line_break_once_we_eventually_get_to_the_end }}

fn({{ var }})
fn({{ var }}, x, {{ var }})

{{ # Leading of `foo`
foo
}}

# Comprehensive comment test
# C1
{ # C2 (lifted up)
# C3 (lifted up)
{ # C4 (leads 1)
  # C5 (leads 1)
  1
  # C6
} # C7 (this line, but after folded 2nd `}`)
# C8 (after both `}}`)
} # C9 (same line as C8)
# C10

# Not curly-curly, 2 inner expressions
{{
  1
  2
}}

# Not curly-curly, 2 outer expressions
{
  { foo }
  bar
}

# Not curly-curly, 0 inner expressions
{{ }}

# Not curly-curly, 0 inner expressions (important, even with dangling comment!)
{{
  # dangling
}}

```


=============================

# Outputs

## Output 1

-----
Indent style: Tab
Indent width: 2
Line ending: LF
Line width: 80
-----

```R
# Hard line break between `{}` tokens
function() {
}
for (i in x) {
}
if (a) {
}

{
}

{
	1
}

{
	# comment
}

# ------------------------------------------------------------------------
# Curly-curly

{{ 1 }}
{{ foo }}

{{
	var_that_is_extremely_long_and_eventually_forces_a_line_break_once_we_eventually_get_to_the_end
}}

fn({{ var }})
fn({{ var }}, x, {{ var }})

{{
	# Leading of `foo`
	foo
}}

# Comprehensive comment test
# C1
# C2 (lifted up)
# C3 (lifted up)
{{
	# C4 (leads 1)
	# C5 (leads 1)
	1
	# C6
}} # C7 (this line, but after folded 2nd `}`)
# C8 (after both `}}`) # C9 (same line as C8)
# C10

# Not curly-curly, 2 inner expressions
{
	{
		1
		2
	}
}

# Not curly-curly, 2 outer expressions
{
	{
		foo
	}
	bar
}

# Not curly-curly, 0 inner expressions
{
	{
	}
}

# Not curly-curly, 0 inner expressions (important, even with dangling comment!)
{
	{
		# dangling
	}
}
```

# Lines exceeding max width of 80 characters
```
   27: 	var_that_is_extremely_long_and_eventually_forces_a_line_break_once_we_eventually_get_to_the_end
```
