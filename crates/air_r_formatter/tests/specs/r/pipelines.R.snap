---
source: crates/air_formatter_test/src/snapshot_builder.rs
info: r/pipelines.R
---
# Input

```R
# FIXME: Should respect vertical alignment (persist the newline of the first RHS)
mtcars |>
  mutate(foo = 1) %>%
  filter(
    foo == 1,
    bar == 2,
  ) |>
  ggplot(
    argument_that_is_quite_long = argument_that_is_quite_long,
    argument_that_is_quite_long = argument_that_is_quite_long
  )


# RHS of assignment should stay on same line as the `<-` operator
name <- mtcars |>
  mutate(foo = 1) %>%
  filter(
    foo == 1,
    bar == 2,
  ) |>
  ggplot(
    argument_that_is_quite_long = argument_that_is_quite_long,
    argument_that_is_quite_long = argument_that_is_quite_long
  )

name = mtcars |>
  mutate(foo = 1) %>%
  filter(
    foo == 1,
    bar == 2,
  ) |>
  ggplot(
    argument_that_is_quite_long = argument_that_is_quite_long,
    argument_that_is_quite_long = argument_that_is_quite_long
  )

# ----------------------------------------------------------------------------------------
# Line break persistance

# If any of the pipes break, all should break

df |> foo() |> bar() |> baz()

df |>
foo() |> bar() |> baz()

df |> foo() |>
bar() |> baz()

df |> foo() |> bar() |>
baz()

# Works with mixed binary operator types
df |>
foo() %>% bar() |> baz()

# One line
df |> ggplot() + geom_line() + geom_bar()

# Expansion requested
df |>
ggplot() + geom_line() + geom_bar()

df |> ggplot() + geom_line() +
geom_bar()

# Non-binary operators break the expansion propagation
(df |> foo()) |>
bar() |>
baz() |>
{ . |> and() |> this() }

(df |> foo()) |>
bar() |>
baz() |>
{ . |>
and() |> this() }

(1 + 2 * 3) +
  (4 + 5 * 6) + (7 + 8)

# Sticky binary operators break the expansion propagation
# (`2:3` stays together, `6^7` stays together)
1 +
  2:3 +
  4 +
  5 +
  6^7 + 8 +
  9

# Precedence is taken into account correctly
1:2 + 3

1:2 +
3

# Inside parentheses, subset, or, subset2, you can also request a break by adding a
# newline before the binary operator, which isn't valid R code at top level
(df
|> foo())

x[df
|> foo()]

x[[df
|> foo()]]

# ----------------------------------------------------------------------------------------
# Blank lines between `operator` and `right`

# Retain at most 1 blank line between the `operator` and the `right`.
# This is the same behavior as retaining blank lines in top level expressions,
# and between sequential arguments in calls.
# This is common with pipelines.
df |>
  a() |>

  # Some important notes about this complex call
  b() |>


  # Some more important notes
  c() |>
  d()

# ----------------------------------------------------------------------------------------
# Comments in chains

df |> foo() # Trailing of `df |> foo()` pipe chain

# Leading of `df |> foo() |> bar() |> baz()` pipe chain
df |>
  foo() |>
  bar() |>
  baz()

df |>
  # Leading of `foo()` call
  foo() |>
  # Leading of `bar()` call
  bar() |>
  # Leading of `baz()` call
  baz()

df |> # Trailing of `df` identifier
  foo() |>
  bar() |>
  baz()

df |>
  foo() |> # Trailing of `df |> foo()` pipe chain
  bar() |>
  baz()

df |>
  foo() |>
  bar() |> # Trailing of `df |> foo() |> bar()` pipe chain
  baz()

df |>
  foo() |>
  bar() |>
  baz() # Trailing of `df |> foo() |> bar() |> baz()` pipe chain

```


=============================

# Outputs

## Output 1

-----
Indent style: Tab
Indent width: 2
Line ending: LF
Line width: 80
-----

```R
# FIXME: Should respect vertical alignment (persist the newline of the first RHS)
mtcars |>
	mutate(foo = 1) %>%
	filter(foo == 1, bar == 2, ) |>
	ggplot(
		argument_that_is_quite_long = argument_that_is_quite_long,
		argument_that_is_quite_long = argument_that_is_quite_long
	)

# RHS of assignment should stay on same line as the `<-` operator
name <- mtcars |>
	mutate(foo = 1) %>%
	filter(foo == 1, bar == 2, ) |>
	ggplot(
		argument_that_is_quite_long = argument_that_is_quite_long,
		argument_that_is_quite_long = argument_that_is_quite_long
	)

name = mtcars |>
	mutate(foo = 1) %>%
	filter(foo == 1, bar == 2, ) |>
	ggplot(
		argument_that_is_quite_long = argument_that_is_quite_long,
		argument_that_is_quite_long = argument_that_is_quite_long
	)

# ----------------------------------------------------------------------------------------
# Line break persistance

# If any of the pipes break, all should break

df |> foo() |> bar() |> baz()

df |>
	foo() |>
	bar() |>
	baz()

df |>
	foo() |>
	bar() |>
	baz()

df |>
	foo() |>
	bar() |>
	baz()

# Works with mixed binary operator types
df |>
	foo() %>%
	bar() |>
	baz()

# One line
df |> ggplot() + geom_line() + geom_bar()

# Expansion requested
df |>
	ggplot() +
	geom_line() +
	geom_bar()

df |>
	ggplot() +
	geom_line() +
	geom_bar()

# Non-binary operators break the expansion propagation
(df |> foo()) |>
	bar() |>
	baz() |>
	{
		. |> and() |> this()
	}

(df |> foo()) |>
	bar() |>
	baz() |>
	{
		. |>
			and() |>
			this()
	}

(1 + 2 * 3) +
	(4 + 5 * 6) +
	(7 + 8)

# Sticky binary operators break the expansion propagation
# (`2:3` stays together, `6^7` stays together)
1 +
	2:3 +
	4 +
	5 +
	6^7 +
	8 +
	9

# Precedence is taken into account correctly
1:2 + 3

1:2 +
	3

# Inside parentheses, subset, or, subset2, you can also request a break by adding a
# newline before the binary operator, which isn't valid R code at top level
(
	df |>
		foo()
)

x[
	df |>
		foo()
]

x[[
	df |>
		foo()
]]

# ----------------------------------------------------------------------------------------
# Blank lines between `operator` and `right`

# Retain at most 1 blank line between the `operator` and the `right`.
# This is the same behavior as retaining blank lines in top level expressions,
# and between sequential arguments in calls.
# This is common with pipelines.
df |>
	a() |>

	# Some important notes about this complex call
	b() |>

	# Some more important notes
	c() |>
	d()

# ----------------------------------------------------------------------------------------
# Comments in chains

df |> foo() # Trailing of `df |> foo()` pipe chain

# Leading of `df |> foo() |> bar() |> baz()` pipe chain
df |>
	foo() |>
	bar() |>
	baz()

df |>
	# Leading of `foo()` call
	foo() |>
	# Leading of `bar()` call
	bar() |>
	# Leading of `baz()` call
	baz()

df |> # Trailing of `df` identifier
	foo() |>
	bar() |>
	baz()

df |>
	foo() |> # Trailing of `df |> foo()` pipe chain
	bar() |>
	baz()

df |>
	foo() |>
	bar() |> # Trailing of `df |> foo() |> bar()` pipe chain
	baz()

df |>
	foo() |>
	bar() |>
	baz() # Trailing of `df |> foo() |> bar() |> baz()` pipe chain
```

# Lines exceeding max width of 80 characters
```
    1: # FIXME: Should respect vertical alignment (persist the newline of the first RHS)
   27: # ----------------------------------------------------------------------------------------
  106: # Inside parentheses, subset, or, subset2, you can also request a break by adding a
  123: # ----------------------------------------------------------------------------------------
  140: # ----------------------------------------------------------------------------------------
```
