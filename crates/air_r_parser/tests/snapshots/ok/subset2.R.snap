---
source: crates/air_r_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```R
fn
fn[[a]]
fn[[a, b]]
fn[[...]]
fn[[a, ..., b]]

fn[[a = 1]]
fn[[a = ]]

fn[[a = 1, b = 2]]
fn[[a = , b = 2]]

fn[[... = 1]]
fn[[... =]]

fn[["arg" = 1]]
fn[["arg" =]]

# Comma tests
fn[[,]]
fn[[,,,]]
fn[[,,a,,b,,]]

# Comment tests
fn[[
  # comment
]]
fn[[,
  # comment
,]]
fn[[
  a, # comment1
  b # comment2
]]
fn[[
  a # comment1
  = # comment2
  1 # comment3
]]

{expr}[[a = 1]]

```


## AST

```
RRoot {
    bom_token: missing (optional),
    expressions: RExpressionList [
        RIdentifier {
            name_token: IDENT@0..2 "fn" [] [],
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@2..5 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@5..7 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: missing (optional),
                        value: RIdentifier {
                            name_token: IDENT@7..8 "a" [] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@8..10 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@10..13 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@13..15 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: missing (optional),
                        value: RIdentifier {
                            name_token: IDENT@15..16 "a" [] [],
                        },
                    },
                    COMMA@16..17 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: RIdentifier {
                            name_token: IDENT@17..19 "b" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@19..21 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@21..24 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@24..26 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: missing (optional),
                        value: RDots {
                            value_token: DOTS@26..29 "..." [] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@29..31 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@31..34 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@34..36 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: missing (optional),
                        value: RIdentifier {
                            name_token: IDENT@36..37 "a" [] [],
                        },
                    },
                    COMMA@37..38 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: RDots {
                            value_token: DOTS@38..42 "..." [Whitespace(" ")] [],
                        },
                    },
                    COMMA@42..43 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: RIdentifier {
                            name_token: IDENT@43..45 "b" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@45..47 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@47..51 "fn" [Newline("\n"), Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@51..53 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RIdentifier {
                                name_token: IDENT@53..54 "a" [] [],
                            },
                            eq_token: EQUAL@54..56 "=" [Whitespace(" ")] [],
                        },
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@56..58 "1" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@58..60 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@60..63 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@63..65 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RIdentifier {
                                name_token: IDENT@65..66 "a" [] [],
                            },
                            eq_token: EQUAL@66..68 "=" [Whitespace(" ")] [],
                        },
                        value: missing (optional),
                    },
                ],
                r_brack2_token: R_BRACK2@68..71 "]]" [Whitespace(" ")] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@71..75 "fn" [Newline("\n"), Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@75..77 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RIdentifier {
                                name_token: IDENT@77..78 "a" [] [],
                            },
                            eq_token: EQUAL@78..80 "=" [Whitespace(" ")] [],
                        },
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@80..82 "1" [Whitespace(" ")] [],
                        },
                    },
                    COMMA@82..83 "," [] [],
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RIdentifier {
                                name_token: IDENT@83..85 "b" [Whitespace(" ")] [],
                            },
                            eq_token: EQUAL@85..87 "=" [Whitespace(" ")] [],
                        },
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@87..89 "2" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@89..91 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@91..94 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@94..96 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RIdentifier {
                                name_token: IDENT@96..97 "a" [] [],
                            },
                            eq_token: EQUAL@97..99 "=" [Whitespace(" ")] [],
                        },
                        value: missing (optional),
                    },
                    COMMA@99..101 "," [Whitespace(" ")] [],
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RIdentifier {
                                name_token: IDENT@101..103 "b" [Whitespace(" ")] [],
                            },
                            eq_token: EQUAL@103..105 "=" [Whitespace(" ")] [],
                        },
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@105..107 "2" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@107..109 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@109..113 "fn" [Newline("\n"), Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@113..115 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RDots {
                                value_token: DOTS@115..118 "..." [] [],
                            },
                            eq_token: EQUAL@118..120 "=" [Whitespace(" ")] [],
                        },
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@120..122 "1" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@122..124 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@124..127 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@127..129 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RDots {
                                value_token: DOTS@129..132 "..." [] [],
                            },
                            eq_token: EQUAL@132..134 "=" [Whitespace(" ")] [],
                        },
                        value: missing (optional),
                    },
                ],
                r_brack2_token: R_BRACK2@134..136 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@136..140 "fn" [Newline("\n"), Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@140..142 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RStringValue {
                                value_token: R_STRING_LITERAL@142..147 "\"arg\"" [] [],
                            },
                            eq_token: EQUAL@147..149 "=" [Whitespace(" ")] [],
                        },
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@149..151 "1" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@151..153 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@153..156 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@156..158 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RStringValue {
                                value_token: R_STRING_LITERAL@158..163 "\"arg\"" [] [],
                            },
                            eq_token: EQUAL@163..165 "=" [Whitespace(" ")] [],
                        },
                        value: missing (optional),
                    },
                ],
                r_brack2_token: R_BRACK2@165..167 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@167..185 "fn" [Newline("\n"), Newline("\n"), Comments("# Comma tests"), Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@185..187 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@187..188 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                ],
                r_brack2_token: R_BRACK2@188..190 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@190..193 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@193..195 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@195..196 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@196..197 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@197..198 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                ],
                r_brack2_token: R_BRACK2@198..200 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@200..203 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@203..205 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@205..206 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@206..207 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: RIdentifier {
                            name_token: IDENT@207..208 "a" [] [],
                        },
                    },
                    COMMA@208..209 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@209..210 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: RIdentifier {
                            name_token: IDENT@210..211 "b" [] [],
                        },
                    },
                    COMMA@211..212 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@212..213 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                ],
                r_brack2_token: R_BRACK2@213..215 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@215..235 "fn" [Newline("\n"), Newline("\n"), Comments("# Comment tests"), Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@235..237 "[[" [] [],
                items: RArgumentList [],
                r_brack2_token: R_BRACK2@237..252 "]]" [Newline("\n"), Whitespace("  "), Comments("# comment"), Newline("\n")] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@252..255 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@255..257 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@257..258 "," [] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                    COMMA@258..272 "," [Newline("\n"), Whitespace("  "), Comments("# comment"), Newline("\n")] [],
                    RArgument {
                        name_clause: missing (optional),
                        value: missing (optional),
                    },
                ],
                r_brack2_token: R_BRACK2@272..274 "]]" [] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@274..277 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@277..279 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: missing (optional),
                        value: RIdentifier {
                            name_token: IDENT@279..283 "a" [Newline("\n"), Whitespace("  ")] [],
                        },
                    },
                    COMMA@283..295 "," [] [Whitespace(" "), Comments("# comment1")],
                    RArgument {
                        name_clause: missing (optional),
                        value: RIdentifier {
                            name_token: IDENT@295..310 "b" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment2")],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@310..313 "]]" [Newline("\n")] [],
            },
        },
        RSubset2 {
            function: RIdentifier {
                name_token: IDENT@313..316 "fn" [Newline("\n")] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@316..318 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RIdentifier {
                                name_token: IDENT@318..333 "a" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment1")],
                            },
                            eq_token: EQUAL@333..348 "=" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment2")],
                        },
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@348..363 "1" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment3")],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@363..366 "]]" [Newline("\n")] [],
            },
        },
        RSubset2 {
            function: RBracedExpressions {
                l_curly_token: L_CURLY@366..369 "{" [Newline("\n"), Newline("\n")] [],
                expressions: RExpressionList [
                    RIdentifier {
                        name_token: IDENT@369..373 "expr" [] [],
                    },
                ],
                r_curly_token: R_CURLY@373..374 "}" [] [],
            },
            arguments: RSubset2Arguments {
                l_brack2_token: L_BRACK2@374..376 "[[" [] [],
                items: RArgumentList [
                    RArgument {
                        name_clause: RArgumentNameClause {
                            name: RIdentifier {
                                name_token: IDENT@376..377 "a" [] [],
                            },
                            eq_token: EQUAL@377..379 "=" [Whitespace(" ")] [],
                        },
                        value: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@379..381 "1" [Whitespace(" ")] [],
                        },
                    },
                ],
                r_brack2_token: R_BRACK2@381..383 "]]" [] [],
            },
        },
    ],
    eof_token: EOF@383..384 "" [Newline("\n")] [],
}
```

## CST

```
0: R_ROOT@0..384
  0: (empty)
  1: R_EXPRESSION_LIST@0..383
    0: R_IDENTIFIER@0..2
      0: IDENT@0..2 "fn" [] []
    1: R_SUBSET2@2..10
      0: R_IDENTIFIER@2..5
        0: IDENT@2..5 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@5..10
        0: L_BRACK2@5..7 "[[" [] []
        1: R_ARGUMENT_LIST@7..8
          0: R_ARGUMENT@7..8
            0: (empty)
            1: R_IDENTIFIER@7..8
              0: IDENT@7..8 "a" [] []
        2: R_BRACK2@8..10 "]]" [] []
    2: R_SUBSET2@10..21
      0: R_IDENTIFIER@10..13
        0: IDENT@10..13 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@13..21
        0: L_BRACK2@13..15 "[[" [] []
        1: R_ARGUMENT_LIST@15..19
          0: R_ARGUMENT@15..16
            0: (empty)
            1: R_IDENTIFIER@15..16
              0: IDENT@15..16 "a" [] []
          1: COMMA@16..17 "," [] []
          2: R_ARGUMENT@17..19
            0: (empty)
            1: R_IDENTIFIER@17..19
              0: IDENT@17..19 "b" [Whitespace(" ")] []
        2: R_BRACK2@19..21 "]]" [] []
    3: R_SUBSET2@21..31
      0: R_IDENTIFIER@21..24
        0: IDENT@21..24 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@24..31
        0: L_BRACK2@24..26 "[[" [] []
        1: R_ARGUMENT_LIST@26..29
          0: R_ARGUMENT@26..29
            0: (empty)
            1: R_DOTS@26..29
              0: DOTS@26..29 "..." [] []
        2: R_BRACK2@29..31 "]]" [] []
    4: R_SUBSET2@31..47
      0: R_IDENTIFIER@31..34
        0: IDENT@31..34 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@34..47
        0: L_BRACK2@34..36 "[[" [] []
        1: R_ARGUMENT_LIST@36..45
          0: R_ARGUMENT@36..37
            0: (empty)
            1: R_IDENTIFIER@36..37
              0: IDENT@36..37 "a" [] []
          1: COMMA@37..38 "," [] []
          2: R_ARGUMENT@38..42
            0: (empty)
            1: R_DOTS@38..42
              0: DOTS@38..42 "..." [Whitespace(" ")] []
          3: COMMA@42..43 "," [] []
          4: R_ARGUMENT@43..45
            0: (empty)
            1: R_IDENTIFIER@43..45
              0: IDENT@43..45 "b" [Whitespace(" ")] []
        2: R_BRACK2@45..47 "]]" [] []
    5: R_SUBSET2@47..60
      0: R_IDENTIFIER@47..51
        0: IDENT@47..51 "fn" [Newline("\n"), Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@51..60
        0: L_BRACK2@51..53 "[[" [] []
        1: R_ARGUMENT_LIST@53..58
          0: R_ARGUMENT@53..58
            0: R_ARGUMENT_NAME_CLAUSE@53..56
              0: R_IDENTIFIER@53..54
                0: IDENT@53..54 "a" [] []
              1: EQUAL@54..56 "=" [Whitespace(" ")] []
            1: R_DOUBLE_VALUE@56..58
              0: R_DOUBLE_LITERAL@56..58 "1" [Whitespace(" ")] []
        2: R_BRACK2@58..60 "]]" [] []
    6: R_SUBSET2@60..71
      0: R_IDENTIFIER@60..63
        0: IDENT@60..63 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@63..71
        0: L_BRACK2@63..65 "[[" [] []
        1: R_ARGUMENT_LIST@65..68
          0: R_ARGUMENT@65..68
            0: R_ARGUMENT_NAME_CLAUSE@65..68
              0: R_IDENTIFIER@65..66
                0: IDENT@65..66 "a" [] []
              1: EQUAL@66..68 "=" [Whitespace(" ")] []
            1: (empty)
        2: R_BRACK2@68..71 "]]" [Whitespace(" ")] []
    7: R_SUBSET2@71..91
      0: R_IDENTIFIER@71..75
        0: IDENT@71..75 "fn" [Newline("\n"), Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@75..91
        0: L_BRACK2@75..77 "[[" [] []
        1: R_ARGUMENT_LIST@77..89
          0: R_ARGUMENT@77..82
            0: R_ARGUMENT_NAME_CLAUSE@77..80
              0: R_IDENTIFIER@77..78
                0: IDENT@77..78 "a" [] []
              1: EQUAL@78..80 "=" [Whitespace(" ")] []
            1: R_DOUBLE_VALUE@80..82
              0: R_DOUBLE_LITERAL@80..82 "1" [Whitespace(" ")] []
          1: COMMA@82..83 "," [] []
          2: R_ARGUMENT@83..89
            0: R_ARGUMENT_NAME_CLAUSE@83..87
              0: R_IDENTIFIER@83..85
                0: IDENT@83..85 "b" [Whitespace(" ")] []
              1: EQUAL@85..87 "=" [Whitespace(" ")] []
            1: R_DOUBLE_VALUE@87..89
              0: R_DOUBLE_LITERAL@87..89 "2" [Whitespace(" ")] []
        2: R_BRACK2@89..91 "]]" [] []
    8: R_SUBSET2@91..109
      0: R_IDENTIFIER@91..94
        0: IDENT@91..94 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@94..109
        0: L_BRACK2@94..96 "[[" [] []
        1: R_ARGUMENT_LIST@96..107
          0: R_ARGUMENT@96..99
            0: R_ARGUMENT_NAME_CLAUSE@96..99
              0: R_IDENTIFIER@96..97
                0: IDENT@96..97 "a" [] []
              1: EQUAL@97..99 "=" [Whitespace(" ")] []
            1: (empty)
          1: COMMA@99..101 "," [Whitespace(" ")] []
          2: R_ARGUMENT@101..107
            0: R_ARGUMENT_NAME_CLAUSE@101..105
              0: R_IDENTIFIER@101..103
                0: IDENT@101..103 "b" [Whitespace(" ")] []
              1: EQUAL@103..105 "=" [Whitespace(" ")] []
            1: R_DOUBLE_VALUE@105..107
              0: R_DOUBLE_LITERAL@105..107 "2" [Whitespace(" ")] []
        2: R_BRACK2@107..109 "]]" [] []
    9: R_SUBSET2@109..124
      0: R_IDENTIFIER@109..113
        0: IDENT@109..113 "fn" [Newline("\n"), Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@113..124
        0: L_BRACK2@113..115 "[[" [] []
        1: R_ARGUMENT_LIST@115..122
          0: R_ARGUMENT@115..122
            0: R_ARGUMENT_NAME_CLAUSE@115..120
              0: R_DOTS@115..118
                0: DOTS@115..118 "..." [] []
              1: EQUAL@118..120 "=" [Whitespace(" ")] []
            1: R_DOUBLE_VALUE@120..122
              0: R_DOUBLE_LITERAL@120..122 "1" [Whitespace(" ")] []
        2: R_BRACK2@122..124 "]]" [] []
    10: R_SUBSET2@124..136
      0: R_IDENTIFIER@124..127
        0: IDENT@124..127 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@127..136
        0: L_BRACK2@127..129 "[[" [] []
        1: R_ARGUMENT_LIST@129..134
          0: R_ARGUMENT@129..134
            0: R_ARGUMENT_NAME_CLAUSE@129..134
              0: R_DOTS@129..132
                0: DOTS@129..132 "..." [] []
              1: EQUAL@132..134 "=" [Whitespace(" ")] []
            1: (empty)
        2: R_BRACK2@134..136 "]]" [] []
    11: R_SUBSET2@136..153
      0: R_IDENTIFIER@136..140
        0: IDENT@136..140 "fn" [Newline("\n"), Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@140..153
        0: L_BRACK2@140..142 "[[" [] []
        1: R_ARGUMENT_LIST@142..151
          0: R_ARGUMENT@142..151
            0: R_ARGUMENT_NAME_CLAUSE@142..149
              0: R_STRING_VALUE@142..147
                0: R_STRING_LITERAL@142..147 "\"arg\"" [] []
              1: EQUAL@147..149 "=" [Whitespace(" ")] []
            1: R_DOUBLE_VALUE@149..151
              0: R_DOUBLE_LITERAL@149..151 "1" [Whitespace(" ")] []
        2: R_BRACK2@151..153 "]]" [] []
    12: R_SUBSET2@153..167
      0: R_IDENTIFIER@153..156
        0: IDENT@153..156 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@156..167
        0: L_BRACK2@156..158 "[[" [] []
        1: R_ARGUMENT_LIST@158..165
          0: R_ARGUMENT@158..165
            0: R_ARGUMENT_NAME_CLAUSE@158..165
              0: R_STRING_VALUE@158..163
                0: R_STRING_LITERAL@158..163 "\"arg\"" [] []
              1: EQUAL@163..165 "=" [Whitespace(" ")] []
            1: (empty)
        2: R_BRACK2@165..167 "]]" [] []
    13: R_SUBSET2@167..190
      0: R_IDENTIFIER@167..185
        0: IDENT@167..185 "fn" [Newline("\n"), Newline("\n"), Comments("# Comma tests"), Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@185..190
        0: L_BRACK2@185..187 "[[" [] []
        1: R_ARGUMENT_LIST@187..188
          0: R_ARGUMENT@187..187
            0: (empty)
            1: (empty)
          1: COMMA@187..188 "," [] []
          2: R_ARGUMENT@188..188
            0: (empty)
            1: (empty)
        2: R_BRACK2@188..190 "]]" [] []
    14: R_SUBSET2@190..200
      0: R_IDENTIFIER@190..193
        0: IDENT@190..193 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@193..200
        0: L_BRACK2@193..195 "[[" [] []
        1: R_ARGUMENT_LIST@195..198
          0: R_ARGUMENT@195..195
            0: (empty)
            1: (empty)
          1: COMMA@195..196 "," [] []
          2: R_ARGUMENT@196..196
            0: (empty)
            1: (empty)
          3: COMMA@196..197 "," [] []
          4: R_ARGUMENT@197..197
            0: (empty)
            1: (empty)
          5: COMMA@197..198 "," [] []
          6: R_ARGUMENT@198..198
            0: (empty)
            1: (empty)
        2: R_BRACK2@198..200 "]]" [] []
    15: R_SUBSET2@200..215
      0: R_IDENTIFIER@200..203
        0: IDENT@200..203 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@203..215
        0: L_BRACK2@203..205 "[[" [] []
        1: R_ARGUMENT_LIST@205..213
          0: R_ARGUMENT@205..205
            0: (empty)
            1: (empty)
          1: COMMA@205..206 "," [] []
          2: R_ARGUMENT@206..206
            0: (empty)
            1: (empty)
          3: COMMA@206..207 "," [] []
          4: R_ARGUMENT@207..208
            0: (empty)
            1: R_IDENTIFIER@207..208
              0: IDENT@207..208 "a" [] []
          5: COMMA@208..209 "," [] []
          6: R_ARGUMENT@209..209
            0: (empty)
            1: (empty)
          7: COMMA@209..210 "," [] []
          8: R_ARGUMENT@210..211
            0: (empty)
            1: R_IDENTIFIER@210..211
              0: IDENT@210..211 "b" [] []
          9: COMMA@211..212 "," [] []
          10: R_ARGUMENT@212..212
            0: (empty)
            1: (empty)
          11: COMMA@212..213 "," [] []
          12: R_ARGUMENT@213..213
            0: (empty)
            1: (empty)
        2: R_BRACK2@213..215 "]]" [] []
    16: R_SUBSET2@215..252
      0: R_IDENTIFIER@215..235
        0: IDENT@215..235 "fn" [Newline("\n"), Newline("\n"), Comments("# Comment tests"), Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@235..252
        0: L_BRACK2@235..237 "[[" [] []
        1: R_ARGUMENT_LIST@237..237
        2: R_BRACK2@237..252 "]]" [Newline("\n"), Whitespace("  "), Comments("# comment"), Newline("\n")] []
    17: R_SUBSET2@252..274
      0: R_IDENTIFIER@252..255
        0: IDENT@252..255 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@255..274
        0: L_BRACK2@255..257 "[[" [] []
        1: R_ARGUMENT_LIST@257..272
          0: R_ARGUMENT@257..257
            0: (empty)
            1: (empty)
          1: COMMA@257..258 "," [] []
          2: R_ARGUMENT@258..258
            0: (empty)
            1: (empty)
          3: COMMA@258..272 "," [Newline("\n"), Whitespace("  "), Comments("# comment"), Newline("\n")] []
          4: R_ARGUMENT@272..272
            0: (empty)
            1: (empty)
        2: R_BRACK2@272..274 "]]" [] []
    18: R_SUBSET2@274..313
      0: R_IDENTIFIER@274..277
        0: IDENT@274..277 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@277..313
        0: L_BRACK2@277..279 "[[" [] []
        1: R_ARGUMENT_LIST@279..310
          0: R_ARGUMENT@279..283
            0: (empty)
            1: R_IDENTIFIER@279..283
              0: IDENT@279..283 "a" [Newline("\n"), Whitespace("  ")] []
          1: COMMA@283..295 "," [] [Whitespace(" "), Comments("# comment1")]
          2: R_ARGUMENT@295..310
            0: (empty)
            1: R_IDENTIFIER@295..310
              0: IDENT@295..310 "b" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment2")]
        2: R_BRACK2@310..313 "]]" [Newline("\n")] []
    19: R_SUBSET2@313..366
      0: R_IDENTIFIER@313..316
        0: IDENT@313..316 "fn" [Newline("\n")] []
      1: R_SUBSET2_ARGUMENTS@316..366
        0: L_BRACK2@316..318 "[[" [] []
        1: R_ARGUMENT_LIST@318..363
          0: R_ARGUMENT@318..363
            0: R_ARGUMENT_NAME_CLAUSE@318..348
              0: R_IDENTIFIER@318..333
                0: IDENT@318..333 "a" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment1")]
              1: EQUAL@333..348 "=" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment2")]
            1: R_DOUBLE_VALUE@348..363
              0: R_DOUBLE_LITERAL@348..363 "1" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment3")]
        2: R_BRACK2@363..366 "]]" [Newline("\n")] []
    20: R_SUBSET2@366..383
      0: R_BRACED_EXPRESSIONS@366..374
        0: L_CURLY@366..369 "{" [Newline("\n"), Newline("\n")] []
        1: R_EXPRESSION_LIST@369..373
          0: R_IDENTIFIER@369..373
            0: IDENT@369..373 "expr" [] []
        2: R_CURLY@373..374 "}" [] []
      1: R_SUBSET2_ARGUMENTS@374..383
        0: L_BRACK2@374..376 "[[" [] []
        1: R_ARGUMENT_LIST@376..381
          0: R_ARGUMENT@376..381
            0: R_ARGUMENT_NAME_CLAUSE@376..379
              0: R_IDENTIFIER@376..377
                0: IDENT@376..377 "a" [] []
              1: EQUAL@377..379 "=" [Whitespace(" ")] []
            1: R_DOUBLE_VALUE@379..381
              0: R_DOUBLE_LITERAL@379..381 "1" [Whitespace(" ")] []
        2: R_BRACK2@381..383 "]]" [] []
  2: EOF@383..384 "" [Newline("\n")] []

```
