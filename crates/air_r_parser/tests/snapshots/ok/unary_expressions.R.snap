---
source: crates/air_r_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```R
+1
-1
~1
?1
!1

+
1

+ # Comment
1

+
# Comment
+ # Comment
1

1 + ++1

```


## AST

```
RRoot {
    bom_token: missing (optional),
    expressions: RExpressionList [
        RUnaryExpression {
            operator: PLUS@0..1 "+" [] [],
            argument: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@1..2 "1" [] [],
            },
        },
        RUnaryExpression {
            operator: MINUS@2..4 "-" [Newline("\n")] [],
            argument: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@4..5 "1" [] [],
            },
        },
        RUnaryExpression {
            operator: TILDE@5..7 "~" [Newline("\n")] [],
            argument: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@7..8 "1" [] [],
            },
        },
        RUnaryExpression {
            operator: WAT@8..10 "?" [Newline("\n")] [],
            argument: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@10..11 "1" [] [],
            },
        },
        RUnaryExpression {
            operator: BANG@11..13 "!" [Newline("\n")] [],
            argument: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@13..14 "1" [] [],
            },
        },
        RUnaryExpression {
            operator: PLUS@14..17 "+" [Newline("\n"), Newline("\n")] [],
            argument: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@17..19 "1" [Newline("\n")] [],
            },
        },
        RUnaryExpression {
            operator: PLUS@19..32 "+" [Newline("\n"), Newline("\n")] [Whitespace(" "), Comments("# Comment")],
            argument: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@32..34 "1" [Newline("\n")] [],
            },
        },
        RUnaryExpression {
            operator: PLUS@34..37 "+" [Newline("\n"), Newline("\n")] [],
            argument: RUnaryExpression {
                operator: PLUS@37..59 "+" [Newline("\n"), Comments("# Comment"), Newline("\n")] [Whitespace(" "), Comments("# Comment")],
                argument: RDoubleValue {
                    value_token: R_DOUBLE_LITERAL@59..61 "1" [Newline("\n")] [],
                },
            },
        },
        RBinaryExpression {
            left: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@61..64 "1" [Newline("\n"), Newline("\n")] [],
            },
            operator: PLUS@64..66 "+" [Whitespace(" ")] [],
            right: RUnaryExpression {
                operator: PLUS@66..68 "+" [Whitespace(" ")] [],
                argument: RUnaryExpression {
                    operator: PLUS@68..69 "+" [] [],
                    argument: RDoubleValue {
                        value_token: R_DOUBLE_LITERAL@69..70 "1" [] [],
                    },
                },
            },
        },
    ],
    eof_token: EOF@70..71 "" [Newline("\n")] [],
}
```

## CST

```
0: R_ROOT@0..71
  0: (empty)
  1: R_EXPRESSION_LIST@0..70
    0: R_UNARY_EXPRESSION@0..2
      0: PLUS@0..1 "+" [] []
      1: R_DOUBLE_VALUE@1..2
        0: R_DOUBLE_LITERAL@1..2 "1" [] []
    1: R_UNARY_EXPRESSION@2..5
      0: MINUS@2..4 "-" [Newline("\n")] []
      1: R_DOUBLE_VALUE@4..5
        0: R_DOUBLE_LITERAL@4..5 "1" [] []
    2: R_UNARY_EXPRESSION@5..8
      0: TILDE@5..7 "~" [Newline("\n")] []
      1: R_DOUBLE_VALUE@7..8
        0: R_DOUBLE_LITERAL@7..8 "1" [] []
    3: R_UNARY_EXPRESSION@8..11
      0: WAT@8..10 "?" [Newline("\n")] []
      1: R_DOUBLE_VALUE@10..11
        0: R_DOUBLE_LITERAL@10..11 "1" [] []
    4: R_UNARY_EXPRESSION@11..14
      0: BANG@11..13 "!" [Newline("\n")] []
      1: R_DOUBLE_VALUE@13..14
        0: R_DOUBLE_LITERAL@13..14 "1" [] []
    5: R_UNARY_EXPRESSION@14..19
      0: PLUS@14..17 "+" [Newline("\n"), Newline("\n")] []
      1: R_DOUBLE_VALUE@17..19
        0: R_DOUBLE_LITERAL@17..19 "1" [Newline("\n")] []
    6: R_UNARY_EXPRESSION@19..34
      0: PLUS@19..32 "+" [Newline("\n"), Newline("\n")] [Whitespace(" "), Comments("# Comment")]
      1: R_DOUBLE_VALUE@32..34
        0: R_DOUBLE_LITERAL@32..34 "1" [Newline("\n")] []
    7: R_UNARY_EXPRESSION@34..61
      0: PLUS@34..37 "+" [Newline("\n"), Newline("\n")] []
      1: R_UNARY_EXPRESSION@37..61
        0: PLUS@37..59 "+" [Newline("\n"), Comments("# Comment"), Newline("\n")] [Whitespace(" "), Comments("# Comment")]
        1: R_DOUBLE_VALUE@59..61
          0: R_DOUBLE_LITERAL@59..61 "1" [Newline("\n")] []
    8: R_BINARY_EXPRESSION@61..70
      0: R_DOUBLE_VALUE@61..64
        0: R_DOUBLE_LITERAL@61..64 "1" [Newline("\n"), Newline("\n")] []
      1: PLUS@64..66 "+" [Whitespace(" ")] []
      2: R_UNARY_EXPRESSION@66..70
        0: PLUS@66..68 "+" [Whitespace(" ")] []
        1: R_UNARY_EXPRESSION@68..70
          0: PLUS@68..69 "+" [] []
          1: R_DOUBLE_VALUE@69..70
            0: R_DOUBLE_LITERAL@69..70 "1" [] []
  2: EOF@70..71 "" [Newline("\n")] []

```
