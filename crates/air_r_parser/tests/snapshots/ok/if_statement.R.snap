---
source: crates/air_r_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```R
if (a) 1
if (a) 1 else 2
if (a) 1 else if (b) 2 else 3

if # comment1
  (a) # comment2
  1 else # comment3
  2 # comment4

```


## AST

```
RRoot {
    bom_token: missing (optional),
    expressions: RExpressionList [
        RIfStatement {
            if_token: IF_KW@0..2 "if" [] [],
            l_paren_token: L_PAREN@2..4 "(" [Whitespace(" ")] [],
            condition: RIdentifier {
                name_token: IDENT@4..5 "a" [] [],
            },
            r_paren_token: R_PAREN@5..6 ")" [] [],
            consequence: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@6..8 "1" [Whitespace(" ")] [],
            },
            else_clause: missing (optional),
        },
        RIfStatement {
            if_token: IF_KW@8..11 "if" [Newline("\n")] [],
            l_paren_token: L_PAREN@11..13 "(" [Whitespace(" ")] [],
            condition: RIdentifier {
                name_token: IDENT@13..14 "a" [] [],
            },
            r_paren_token: R_PAREN@14..15 ")" [] [],
            consequence: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@15..17 "1" [Whitespace(" ")] [],
            },
            else_clause: RElseClause {
                else_token: ELSE_KW@17..22 "else" [Whitespace(" ")] [],
                alternative: RDoubleValue {
                    value_token: R_DOUBLE_LITERAL@22..24 "2" [Whitespace(" ")] [],
                },
            },
        },
        RIfStatement {
            if_token: IF_KW@24..27 "if" [Newline("\n")] [],
            l_paren_token: L_PAREN@27..29 "(" [Whitespace(" ")] [],
            condition: RIdentifier {
                name_token: IDENT@29..30 "a" [] [],
            },
            r_paren_token: R_PAREN@30..31 ")" [] [],
            consequence: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@31..33 "1" [Whitespace(" ")] [],
            },
            else_clause: RElseClause {
                else_token: ELSE_KW@33..38 "else" [Whitespace(" ")] [],
                alternative: RIfStatement {
                    if_token: IF_KW@38..41 "if" [Whitespace(" ")] [],
                    l_paren_token: L_PAREN@41..43 "(" [Whitespace(" ")] [],
                    condition: RIdentifier {
                        name_token: IDENT@43..44 "b" [] [],
                    },
                    r_paren_token: R_PAREN@44..45 ")" [] [],
                    consequence: RDoubleValue {
                        value_token: R_DOUBLE_LITERAL@45..47 "2" [Whitespace(" ")] [],
                    },
                    else_clause: RElseClause {
                        else_token: ELSE_KW@47..52 "else" [Whitespace(" ")] [],
                        alternative: RDoubleValue {
                            value_token: R_DOUBLE_LITERAL@52..54 "3" [Whitespace(" ")] [],
                        },
                    },
                },
            },
        },
        RIfStatement {
            if_token: IF_KW@54..69 "if" [Newline("\n"), Newline("\n")] [Whitespace(" "), Comments("# comment1")],
            l_paren_token: L_PAREN@69..73 "(" [Newline("\n"), Whitespace("  ")] [],
            condition: RIdentifier {
                name_token: IDENT@73..74 "a" [] [],
            },
            r_paren_token: R_PAREN@74..86 ")" [] [Whitespace(" "), Comments("# comment2")],
            consequence: RDoubleValue {
                value_token: R_DOUBLE_LITERAL@86..90 "1" [Newline("\n"), Whitespace("  ")] [],
            },
            else_clause: RElseClause {
                else_token: ELSE_KW@90..106 "else" [Whitespace(" ")] [Whitespace(" "), Comments("# comment3")],
                alternative: RDoubleValue {
                    value_token: R_DOUBLE_LITERAL@106..121 "2" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment4")],
                },
            },
        },
    ],
    eof_token: EOF@121..122 "" [Newline("\n")] [],
}
```

## CST

```
0: R_ROOT@0..122
  0: (empty)
  1: R_EXPRESSION_LIST@0..121
    0: R_IF_STATEMENT@0..8
      0: IF_KW@0..2 "if" [] []
      1: L_PAREN@2..4 "(" [Whitespace(" ")] []
      2: R_IDENTIFIER@4..5
        0: IDENT@4..5 "a" [] []
      3: R_PAREN@5..6 ")" [] []
      4: R_DOUBLE_VALUE@6..8
        0: R_DOUBLE_LITERAL@6..8 "1" [Whitespace(" ")] []
      5: (empty)
    1: R_IF_STATEMENT@8..24
      0: IF_KW@8..11 "if" [Newline("\n")] []
      1: L_PAREN@11..13 "(" [Whitespace(" ")] []
      2: R_IDENTIFIER@13..14
        0: IDENT@13..14 "a" [] []
      3: R_PAREN@14..15 ")" [] []
      4: R_DOUBLE_VALUE@15..17
        0: R_DOUBLE_LITERAL@15..17 "1" [Whitespace(" ")] []
      5: R_ELSE_CLAUSE@17..24
        0: ELSE_KW@17..22 "else" [Whitespace(" ")] []
        1: R_DOUBLE_VALUE@22..24
          0: R_DOUBLE_LITERAL@22..24 "2" [Whitespace(" ")] []
    2: R_IF_STATEMENT@24..54
      0: IF_KW@24..27 "if" [Newline("\n")] []
      1: L_PAREN@27..29 "(" [Whitespace(" ")] []
      2: R_IDENTIFIER@29..30
        0: IDENT@29..30 "a" [] []
      3: R_PAREN@30..31 ")" [] []
      4: R_DOUBLE_VALUE@31..33
        0: R_DOUBLE_LITERAL@31..33 "1" [Whitespace(" ")] []
      5: R_ELSE_CLAUSE@33..54
        0: ELSE_KW@33..38 "else" [Whitespace(" ")] []
        1: R_IF_STATEMENT@38..54
          0: IF_KW@38..41 "if" [Whitespace(" ")] []
          1: L_PAREN@41..43 "(" [Whitespace(" ")] []
          2: R_IDENTIFIER@43..44
            0: IDENT@43..44 "b" [] []
          3: R_PAREN@44..45 ")" [] []
          4: R_DOUBLE_VALUE@45..47
            0: R_DOUBLE_LITERAL@45..47 "2" [Whitespace(" ")] []
          5: R_ELSE_CLAUSE@47..54
            0: ELSE_KW@47..52 "else" [Whitespace(" ")] []
            1: R_DOUBLE_VALUE@52..54
              0: R_DOUBLE_LITERAL@52..54 "3" [Whitespace(" ")] []
    3: R_IF_STATEMENT@54..121
      0: IF_KW@54..69 "if" [Newline("\n"), Newline("\n")] [Whitespace(" "), Comments("# comment1")]
      1: L_PAREN@69..73 "(" [Newline("\n"), Whitespace("  ")] []
      2: R_IDENTIFIER@73..74
        0: IDENT@73..74 "a" [] []
      3: R_PAREN@74..86 ")" [] [Whitespace(" "), Comments("# comment2")]
      4: R_DOUBLE_VALUE@86..90
        0: R_DOUBLE_LITERAL@86..90 "1" [Newline("\n"), Whitespace("  ")] []
      5: R_ELSE_CLAUSE@90..121
        0: ELSE_KW@90..106 "else" [Whitespace(" ")] [Whitespace(" "), Comments("# comment3")]
        1: R_DOUBLE_VALUE@106..121
          0: R_DOUBLE_LITERAL@106..121 "2" [Newline("\n"), Whitespace("  ")] [Whitespace(" "), Comments("# comment4")]
  2: EOF@121..122 "" [Newline("\n")] []

```
