---
source: crates/air_r_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```R
1;2

1 ; 2

1;;2

{
    1;
}

{
    1; 2
}

1;# comment
1; # comment

```


## AST

```
RRoot {
    bom_token: missing (optional),
    expressions: RExpressionList [
        RDoubleValue {
            value_token: R_DOUBLE_LITERAL@0..1 "1" [] [],
        },
        RDoubleValue {
            value_token: R_DOUBLE_LITERAL@1..3 "2" [Whitespace(";")] [],
        },
        RDoubleValue {
            value_token: R_DOUBLE_LITERAL@3..6 "1" [Newline("\n"), Newline("\n")] [],
        },
        RDoubleValue {
            value_token: R_DOUBLE_LITERAL@6..10 "2" [Whitespace(" ; ")] [],
        },
        RDoubleValue {
            value_token: R_DOUBLE_LITERAL@10..13 "1" [Newline("\n"), Newline("\n")] [],
        },
        RDoubleValue {
            value_token: R_DOUBLE_LITERAL@13..16 "2" [Whitespace(";;")] [],
        },
        RBracedExpressions {
            l_curly_token: L_CURLY@16..19 "{" [Newline("\n"), Newline("\n")] [],
            expressions: RExpressionList [
                RDoubleValue {
                    value_token: R_DOUBLE_LITERAL@19..26 "1" [Newline("\n"), Whitespace("    ")] [Whitespace(";")],
                },
            ],
            r_curly_token: R_CURLY@26..28 "}" [Newline("\n")] [],
        },
        RBracedExpressions {
            l_curly_token: L_CURLY@28..31 "{" [Newline("\n"), Newline("\n")] [],
            expressions: RExpressionList [
                RDoubleValue {
                    value_token: R_DOUBLE_LITERAL@31..37 "1" [Newline("\n"), Whitespace("    ")] [],
                },
                RDoubleValue {
                    value_token: R_DOUBLE_LITERAL@37..40 "2" [Whitespace("; ")] [],
                },
            ],
            r_curly_token: R_CURLY@40..42 "}" [Newline("\n")] [],
        },
        RDoubleValue {
            value_token: R_DOUBLE_LITERAL@42..55 "1" [Newline("\n"), Newline("\n")] [Whitespace(";"), Comments("# comment")],
        },
        RDoubleValue {
            value_token: R_DOUBLE_LITERAL@55..68 "1" [Newline("\n")] [Whitespace("; "), Comments("# comment")],
        },
    ],
    eof_token: EOF@68..69 "" [Newline("\n")] [],
}
```

## CST

```
0: R_ROOT@0..69
  0: (empty)
  1: R_EXPRESSION_LIST@0..68
    0: R_DOUBLE_VALUE@0..1
      0: R_DOUBLE_LITERAL@0..1 "1" [] []
    1: R_DOUBLE_VALUE@1..3
      0: R_DOUBLE_LITERAL@1..3 "2" [Whitespace(";")] []
    2: R_DOUBLE_VALUE@3..6
      0: R_DOUBLE_LITERAL@3..6 "1" [Newline("\n"), Newline("\n")] []
    3: R_DOUBLE_VALUE@6..10
      0: R_DOUBLE_LITERAL@6..10 "2" [Whitespace(" ; ")] []
    4: R_DOUBLE_VALUE@10..13
      0: R_DOUBLE_LITERAL@10..13 "1" [Newline("\n"), Newline("\n")] []
    5: R_DOUBLE_VALUE@13..16
      0: R_DOUBLE_LITERAL@13..16 "2" [Whitespace(";;")] []
    6: R_BRACED_EXPRESSIONS@16..28
      0: L_CURLY@16..19 "{" [Newline("\n"), Newline("\n")] []
      1: R_EXPRESSION_LIST@19..26
        0: R_DOUBLE_VALUE@19..26
          0: R_DOUBLE_LITERAL@19..26 "1" [Newline("\n"), Whitespace("    ")] [Whitespace(";")]
      2: R_CURLY@26..28 "}" [Newline("\n")] []
    7: R_BRACED_EXPRESSIONS@28..42
      0: L_CURLY@28..31 "{" [Newline("\n"), Newline("\n")] []
      1: R_EXPRESSION_LIST@31..40
        0: R_DOUBLE_VALUE@31..37
          0: R_DOUBLE_LITERAL@31..37 "1" [Newline("\n"), Whitespace("    ")] []
        1: R_DOUBLE_VALUE@37..40
          0: R_DOUBLE_LITERAL@37..40 "2" [Whitespace("; ")] []
      2: R_CURLY@40..42 "}" [Newline("\n")] []
    8: R_DOUBLE_VALUE@42..55
      0: R_DOUBLE_LITERAL@42..55 "1" [Newline("\n"), Newline("\n")] [Whitespace(";"), Comments("# comment")]
    9: R_DOUBLE_VALUE@55..68
      0: R_DOUBLE_LITERAL@55..68 "1" [Newline("\n")] [Whitespace("; "), Comments("# comment")]
  2: EOF@68..69 "" [Newline("\n")] []

```
